CREATE DATABASE bookhaven;


CREATE TABLE Item
(
    ItemCode INT(6) UNIQUE NOT NULL,
    ItemName VARCHAR(50) NOT NULL,
    Price DECIMAL(6,2) NOT NULL,
    Supplier VARCHAR(50) NOT NULL,
    StockLevel INT(6),
    ReorderLevel INT(6),
    CONSTRAINT I_ICo_pk PRIMARY KEY (ItemCode)
);


CREATE TABLE Supplier
(
    SupplierID INT(5) UNIQUE NOT NULL,
    SupplierName VARCHAR(50) NOT NULL,
    Email VARCHAR(50),
    Phone VARCHAR(12) NOT NULL,
    CONSTRAINT S_SID_pk PRIMARY KEY (SupplierID)
);


CREATE TABLE `Item_Supplier`
(
    ItemCode INT(6) NOT NULL,
    SupplierID INT(5) NOT NULL,
    DateSupplied DATE NOT NULL,
    Quantity INT(6),
    CONSTRAINT IS_pk PRIMARY KEY (ItemCode, SupplierID, DateSupplied),
    CONSTRAINT IS_ICo_fk FOREIGN KEY (ItemCode) REFERENCES Item(ItemCode),
    CONSTRAINT IS_SID_fk FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID)
);


CREATE TABLE Customer
(
    CustomerID INT(8) UNIQUE NOT NULL,
    fName VARCHAR(50) NOT NULL,
    lName VARCHAR(50) NOT NULL,
    Email VARCHAR(50),
    Phone VARCHAR(12) NOT NULL,
    addLine1 VARCHAR(50) NOT NULL,
    addLine2 VARCHAR(50) NOT NULL,
    addLine3 VARCHAR(50) NOT NULL,
    CONSTRAINT C_CID_pk PRIMARY KEY (CustomerID)
);


CREATE TABLE Payment
(
    PaymentID INT(6) UNIQUE NOT NULL,
    Amount DECIMAL(6,2) NOT NULL,
    DateAndTime DATETIME,
    CONSTRAINT P_PID_pk PRIMARY KEY (PaymentID)
);


CREATE TABLE Online_Payment
(
    PaymentID INT(6) UNIQUE NOT NULL,
    CardNo INT(16) NOT NULL,    
    Bank VARCHAR(50) NOT NULL,
    CardHolderName VARCHAR(50) NOT NULL,
    IssuedDate DATE NOT NULL,
    CONSTRAINT OP_PID_pk PRIMARY KEY (PaymentID),
    CONSTRAINT OP_PID_fk FOREIGN KEY (PaymentID) REFERENCES Payment(PaymentID)
);


CREATE TABLE Bank_Payment
(
    PaymentID INT(6) UNIQUE NOT NULL,
    TransferCode INT(8) NOT NULL,
    AccNo VARCHAR(10) NOT NULL,
    Bank VARCHAR(50) NOT NULL,
    CONSTRAINT BP_PID_pk PRIMARY KEY (PaymentID),
    CONSTRAINT BP_PID_fk FOREIGN KEY (PaymentID) REFERENCES Payment(PaymentID)
);


CREATE TABLE Book
(
    ItemCode INT(6) UNIQUE NOT NULL,
    ISBN INT(13) UNIQUE NOT NULL,
    Title VARCHAR(50) NOT NULL,
    Genre VARCHAR(50) NOT NULL,
    Category VARCHAR(50), 
    Author VARCHAR(50) NOT NULL,
    Publisher VARCHAR(50),
    YearOfPublication VARCHAR(4),
    Edition VARCHAR(5),
    CONSTRAINT B_ICo_pk PRIMARY KEY (ItemCode),
    CONSTRAINT I_ICo_fk FOREIGN KEY (ItemCode) REFERENCES Item(ItemCode)
);


CREATE TABLE Stationary
(
    ItemCode INT(6) UNIQUE NOT NULL,
    Name VARCHAR(50) NOT NULL,
    Category VARCHAR(50) NOT NULL,
    Manufacturer VARCHAR(50), 
    CONSTRAINT S_ICo_pk PRIMARY KEY (ItemCode),
    CONSTRAINT S_ICo_fk FOREIGN KEY (ItemCode) REFERENCES Item(ItemCode)
);


CREATE TABLE `Order`
(
    OrderID INT(6) UNIQUE NOT NULL,
    OrderDate DATE NOT NULL,
    OrderedItems VARCHAR(100), 
    TotalAmount DECIMAL(6,2) NOT NULL,
    OrderConfirmation VARCHAR(50) NOT NULL,
    PaymentDetails VARCHAR(50) NOT NULL,
    DeliveryDate DATE,
    DeliveryAddress VARCHAR(70),
    CustomerID INT(8) NOT NULL,
    PaymentID INT (6) NOT NULL,
    CONSTRAINT O_OID_pk PRIMARY KEY (OrderID),
    CONSTRAINT O_CID_fk FOREIGN KEY (CustomerID) REFERENCES customer(CustomerID),
    CONSTRAINT O_PID_fk FOREIGN KEY (PaymentID) REFERENCES Payment(PaymentID)
);


CREATE TABLE `Order_Item`
(
    ItemCode INT(6) NOT NULL,
    OrderID INT(6) NOT NULL,
    CONSTRAINT OI_pk PRIMARY KEY (ItemCode, OrderID),
    CONSTRAINT OI_ICo_fk FOREIGN KEY (ItemCode) REFERENCES Item(ItemCode),
    CONSTRAINT OI_OID_fk FOREIGN KEY (OrderID) REFERENCES `Order`(OrderID)
);


INSERT INTO Item (ItemCode, ItemName, Price, Supplier, StockLevel, ReorderLevel)
VALUES
(001001, 'Blue Pen', 2.00, 'Anderson', 1500, 250),
(001002, '15cm Ruler', 5.00, 'Anderson', 1000, 250),
(001120, 'Harry Potter and the Deathly Hallows', 50.00, 'Peterson', 3000, 1000),
(100560, 'Pencil Box', 10.00, 'Dawkins', 750, 500),
(152000, 'Water Bottle', 8.00, 'Harris', 1200, 500),
(820100, 'Fundamentals of Database Systems', 75.00, 'Peterson', 1640, 200),
(596320, '12 Rules for Life', 12.00, 'Morgan', 4500, 750),
(400201, 'Operating Systems: A Spiral Approach', 30.00, 'Dawkins', 2630, 250),
(805030, 'The Screwtape Letters', 45.00, 'Charles', 3200, 720),
(152010, 'Lunch Box', 13.00, 'Harris', 4000, 1000),
(300502, 'Beginning MySQL Database Design and Optimization', 30.00, 'Charles', 620, 500);


INSERT INTO supplier (SupplierID, SupplierName, Email, Phone)
VALUES
(1005, 'Anderson', 'anderson05@gmail.com', '044717532611'),
(1006, 'Peterson', 'peterson8@yahoo.com', '046223782643'),
(1007, 'Dawkins', 'r_dawks46@yahoo.com', '044336845265'),
(1008, 'Harris', 'harris@gmail.com', '045625865302'),
(1009, 'Morgan', 'e_morgan@gmail.com', '044978570246'),
(1011, 'Charles', 'charlie@yahoo.com', '042904025780');


INSERT INTO item_supplier (ItemCode, SupplierID, DateSupplied, Quantity)
VALUES
(001120, 1006, '2023-04-06', 500),
(152010, 1008, '2023-10-03', 1000),
(805030, 1011, '2023-01-12', 250),
(596320, 1009, '2023-08-01', 650),
(820100, 1006, '2023-04-06', 1500);


INSERT INTO customer (CustomerID, fName, lName, Email, Phone, addLine1, addLine2, addLine3)
VALUES
(65041, 'Matt', 'Fradd', 'm_fradd@gmail.com', '041569307541', '05', 'Trelawny Place', 'California'),
(65042, 'Scott', 'Hahn', 'Hahns50@yahoo.com', '042785304659', '60', ' Marlborough Drive', 'New York'),
(65043, 'Gilbert', 'Chesterton', 'chester01@yahoo.com', '040752643970', '6780', 'St. Albert Place', 'Florida'),
(65044, 'Tammy', 'Peterson', 'tpeter2@gmail.com', '046302157001', '394', 'Madison Avenue', 'Washington'),
(65045, 'Joe', 'Rogan', 'j_roe@gmail.com', '048567020439', '101', 'Theatre Avenue', 'Miami');


INSERT INTO Payment (PaymentID, Amount, DateAndTime)
VALUES
(502, 57.00, '2023-03-16 02.33'),
(251, 95.00, '2023-05-13 08.35'),
(503, 105.00, '2023-06-02 12.50'),
(504, 21.00, '2023-06-09 06.21'),
(252, 18.00, '2023-06-24 11.10'),
(253, 25.00, '2023-08-05 01.59'),
(254, 50.00, '2023-09-21 02.26'),
(505, 7.00, '2023-09-23 04.01'),
(506, 10.00, '2023-11-01 05.45'),
(255, 75.00, '2023-11-15 03.05');


INSERT INTO online_payment (PaymentID, CardNo, Bank, CardHolderName, IssuedDate) 
VALUES
(251, 495278302846, 'HNB', 'Scott Hahn', '2020-08-06'),
(252, 573071924500, 'HSBC', 'Tammy Peterson', '2018-11-25'),
(253, 501576332089, 'HSBC', 'Joe Rogan', '2021-04-13'),
(254, 485006974188, 'Chartered Bank', 'Gilbert Chesterton', '2019-03-06'),
(255, 501576332089, 'HSBC', 'Joe Rogan', '2021-04-13');


INSERT INTO bank_payment (PaymentID, TransferCode, AccNo, Bank) 
VALUES 
(502, 90063, '8120056702', 'HSBC'), 
(503, 90167, '8056970004', 'Amana Bank'), 
(504, 91004, '8625409783', 'Chartered Bank'), 
(505, 92059, '8536002471', 'HSBC'), 
(506, 95001, '8625409783', 'Chartered Bank');


INSERT INTO Book (ItemCode, ISBN, Title, Genre, Category, Author, Publisher, YearOfPublication, Edition)
VALUES
(001120, 747591059, 'Harry Potter and the Deathly Hallows', 'Fantasy', 'Young Adult Novel', 'J.K.Rowling', 'Bloomsbury', '2007', '1'),
(820100, 133971248, 'Fundamentals of Database Systems', 'Education', 'Database Management', 'Ramez Elmasri', 'Pearson', '2015', '7'),
(596320, 241351635, '12 Rules for Life', 'Self-help', 'Psychology', 'Jordan Peterson', 'Penguin Allen', '2018', '1'),
(400201, 70164543, 'Operating Systems: A Spiral Approach', 'Education', 'Computer Science', 'Ramez Elmasri', 'Mcgraw Hill Higher Education', '2010', '1'),
(805030, 1444424096, 'The Screwtape Letters', 'Epistolary novel', 'Novel', 'C.S.Lewis', 'Geoffrey Bles', '1942', '2'),
(300502, 1590593324, 'Beginning MySQL Database Design and Optimization', 'Education', 'Database Management', 'Chad Russell', 'Springer', '2004', '1');


INSERT INTO stationary (ItemCode, Name, Category, Manufacturer)
VALUES
(001001, 'Blue Pen', 'Pen', 'Atlas'),
(001002, '15cm Ruler', 'Ruler', 'Atlas'),
(100560, 'Pencil Box', 'Container', 'Smiggle'),
(152000, 'Water Bottle', 'Bottle', 'Smiggle'),
(152010, 'Lunch Box', 'Container', 'Smiggle');


INSERT INTO `order` (`OrderID`, `OrderDate`, `OrderedItems`, `TotalAmount`, `OrderConfirmation`, `PaymentDetails`, `DeliveryDate`, `DeliveryAddress`,  `CustomerID`, `PaymentID`)
VALUES
(04000, '2023-03-09', '12 Rules for Life, The Screwtape Letters', 57.00, 'Bank Payment', 'Successful', '2023-03-19', '394, Madison Avenue, Washington', 65044, 502),
(04001, '2023-05-07', 'The Screwtape Letters, Harry Potter and the Deathly Hallows', 95.00,  'Online Payment', 'Pending', '2023-05-17', '60,  Marlborough Drive, New York', 65042, 251),
(04002, '2023-06-02', 'Fundamentals of Database Systems, Operating Systems: A Spiral Approach', 105.00, 'Bank Payment', 'Successful', '2023-06-12', '6780, St. Albert Place, Florida', 65043, 503),
(04003, '2023-06-03', 'Lunch Box, Water Bottle', 21.00, 'Bank Payment', 'Pending', '2023-06-13',  '101, Theatre Avenue, Miami', 65045, 504),
(04004, '2023-06-20', 'Water Bottle, Pencil Box', 18.00, 'Online Payment', 'Successful', '2023-06-30', '394, Madison Avenue, Washington', 65044, 252),
(04005, '2023-08-01', '15cm Ruler, 12 Rules for Life, Water Bottle', 25.00, 'Online Payment', 'Successful', '2023-08-11', '101, Theatre Avenue, Miami', 65045, 253),
(04006, '2023-09-16', 'Harry Potter and the Deathly Hallows', 50.00, 'Online Payment', 'Pending', '2023-09-26', '6780, St. Albert Place, Florida', 65043, 254),
(04007, '2023-09-18', 'Blue Pen, 15cm Ruler', 7.00, 'Bank Payment', 'Successful', '2023-09-28', '394, Madison Avenue, Washington', 65044, 505),
(04008, '2023-10-27', 'Pencil Box', 10.00, 'Bank Payment', 'Successful', '2023-11-07', '394, Madison Avenue, Washington', 65044, 506),
(04009, '2023-11-10', 'Fundamentals of Database Systems', 75.00, 'Online Payment', 'Pending', '2023-11-20', '101, Theatre Avenue, Miami', 65045, 255);


INSERT INTO order_item (ItemCode, OrderID)
VALUES
(1001, 4007),
(1002, 4005),
(1002, 4007),
(1120, 4001),
(1120, 4006),
(100560, 4004),
(100560, 4008),
(152000, 4003),
(152000, 4004),
(152000, 4005),
(152010, 4003),
(400201, 4002),
(596320, 4000),
(596320, 4005),
(805030, 4000),
(805030, 4001),
(820100, 4002),
(820100, 4009);


SELECT ISBN, Title, Category, Author, Publisher
FROM book
WHERE (Publisher = 'Pearson' OR Publisher='Springer') AND Category='Database Management' OR Author = 'Ramez Elmasri';


SELECT CONCAT(C.fname, ' ', C.lName) AS 'Full Name', C.CustomerID, C.Phone, C.Email, COUNT(O.OrderID) AS 'Number of Orders'
FROM Customer AS C JOIN `order` AS O 
ON C.CustomerID = O.CustomerID
WHERE O.OrderDate >= DATE_SUB(NOW(), INTERVAL 6 MONTH)
GROUP BY C.CustomerID
HAVING COUNT(O.OrderID) > 2;


